npm init
npm install lodash --save
npm install express --save
npm install mongoose --save
npm install body-parser --save

npm i rxjs --save
npm install --save apollo-server-express graphql-tools graphql express body-parser
npm i --save-dev nodemon
npm i cors --save
npm install --save-dev babel-cli babel-preset-es2015 babel-preset-env

npm install oracledb --save

add .bablerc
{
  "presets": ["env"]
}

add package.json scripts:
"scripts": {
  "start": "nodemon --exec babel-node --presets=es2015 -- index.js",
  "test": "echo \"Error: no test specified\" && exit 1",
  "babel-node": "babel-node --presets=es2015"
},

Testing:
npm i --save-dev mocha
npm i --save-dev chai
npm i --save-dev sinon
npm i --save-dev sinon-chai
npm i --save-dev babel-register
npm i --save-dev chai-http
npm install --save-dev chai-subset

or

npm i --save-dev mocha chai sinon sinon-chai babel-register

npm run test-server


=================== Deployment to k8s ==================
npm install pm2 -save
create Dockerfile
create process.yml
create service and deployment yamls

Docker:
======
sudo docker build -t solicitations-node:v1 .
sudo docker tag solicitations-node:v1 ubt-master:443/solicitations-node:v1
sudo docker push ubt-master:443/solicitations-node:v1

K8s:
====
cd  ./deploy
//kubectl create -f solicitations-node.yaml

// Add $DNAME to solicitations-node.yaml image: prop
export DNAME="ubt-master" && envsubst < solicitations-node.yaml | kubectl create -f -
kubectl create -f solicitations-node-service.yaml

kubectl get pods
kubectl get deployments
kubectl get service

Firewall:
========
Regular cmd (not admin)
.\VBoxManage.exe natnetwork modify --netname NatNetwork --port-forward-4 "solicitations:tcp:[]:30334:[10.0.2.5]:30334"

##################################################################################
=================== Deployment to k8s ==================
1. no longer used
#npm install pm2 -save

2.
create Dockerfile
create process.yml
create service and deployment yamls: reviews-k8s.yaml

3.
Delete existing, if necessary:
=======
kubectl delete service reviews-node-service
kubectl delete deployment reviews-node

sudo docker rmi reviews-node:v1
sudo docker rmi ubt-master:443/reviews-node:v1

4. Checkout code from git/hub into dir on server:
cd ~/repo/msrv
git pull origin master
cd services/nress/reviews

5. build production:
sudo npm install

remove build dir content: cd build
sudo rm -Rf ./*

sudo npm run build
sudo cp -R ./config ./build

To test start:
node ./build/index.js

6.
Docker:
======
sudo docker build -t reviews-node:v1 .
sudo docker tag reviews-node:v1 ubt-master:443/reviews-node:v1
sudo docker push ubt-master:443/reviews-node:v1

K8s:
====
cd  ./deploy

// Add $DNAME to reviews-node.yaml image: prop
export DNAME="ubt-master" && envsubst < reviews-k8s.yaml | kubectl create -f -

kubectl get pods
kubectl get deployments
kubectl get service

Firewall:
========
Regular cmd (not admin)
.\VBoxManage.exe natnetwork modify --netname NatNetwork --port-forward-4 "reviews:tcp:[]:30335:[10.0.2.5]:30335"

Test in browser:
http://192.168.56.1:30333/nress/reviews

####################################################################################



Prod build:
===========

mkdir ./build
del -r build/*

npm install --save-dev babel-preset-es3 babel-preset-es2015-mod babel-plugin-transform-runtime
npm install --save-dev babel-preset-es2015-mod
#npm install --save-dev babel-plugin-transform-runtime
#npm install babel-plugin-uglify --save-dev
#npm uninstall babel-plugin-uglify --save-dev
npm install babel-minify --save-dev
npm install babel-plugin-transform-minify-booleans --save-dev

Add to .bablerc:
================
"ignore": ["**/*.test.js", "node_modules"]

Add to package.json:
====================
//"prebuild": "rm -rf build/*",
//"prebuild": "del /r /f /q build"  // cmd
"prebuild": "del -R -Force -Path build && mkdir build",  // powershell
"build": "babel --minified=true --presets=es2015 . -d ./build -s",
"prestart": "npm build",
//"start-prod": "NODE_ENV=production node ./build/index.js" - not working


npm run build

sudo cp -a ./config/. ./build/config/.

start:
node ./build/index.js

pm2 start:
=========
pm2 start ./build/index.js
pm2 list
pm2 stop ./build/index.js
pm2 delete $id
pm2 kill


Spinoff:
=======
kubectl delete service solicitations-node-service
kubectl delete deployment solicitations-node

sudo docker rmi solicitations-node:v1
sudo docker rmi ubt-master:443/solicitations-node:v1
