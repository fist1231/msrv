cat <<EOF | kubectl create -f -
apiVersion: v1
kind: Namespace
metadata:
  name: users-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: users-nginx-config
  namespace: default
data:
  nginx.conf: |
    upstream users-nginx {
      10.215.172.145:30333;
      10.215.172.21:30333;
    }
    server {
      listen 4444;
      location / {
        proxy_pass http://users-nginx;
      }
    }
    
/*
apiVersion: v1
kind: ConfigMap
metadata:
  name: users-nginx-config
  namespace: default
data:
  default.conf: |
    upstream users-nginx {
      10.215.172.145:30333;
      10.215.172.21:30333;
    }
    server {
      listen 4444;
      root /usr/share/nginx/html;
      location / {
        proxy_pass http://users-nginx;
      }
    }
*/
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: users-nginx
  namespace: default
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: users-nginx
    spec:
      containers:
      - image: nginx:1.13.7 
        imagePullPolicy: Always
        name: users-nginx
        ports:
        - containerPort: 4444
        volumeMounts:
        - name: users-nginx-config
          mountPath: "/etc/nginx/conf.d"
      volumes:
        - hostPath:
            path: "/etc/nginx/conf.d"
          name: users-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: users-nginx
    name: users-nginx-service
  name: users-nginx-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 4444
    targetPort: 4444
    protocol: TCP
    nodePort: 30080
  selector:
    run: users-nginx
  type: NodePort    
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: users-nginx-ingress
  namespace: default
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - 192.168.1.208
    secretName: users-nginx-tls
  rules:
  - host: 192.168.1.208
    http:
      paths:
      - path: /
        backend:
          serviceName: users-nginx-service
          servicePort: 80
EOF

# kubectl create -f namespace.yaml
kubectl create configmap users-nginx-config --from-file=./nginx-configmap.yaml
kubectl get configmap users-nginx-config -o yaml

kubectl delete configmap users-nginx-config
kubectl create -f nginx-deployment3.yaml
kubectl create -f nginx-service4.yaml

kubectl delete service users-nginx-service
kubectl delete deployment users-nginx
kubectl delete configmap users-nginx-config


