npm init
package.json

server.js
mkdir api, api/controller, api/model, api/routes

npm install --save-dev nodemon
npm install express --save

mongo db install

\
start:
======
npm run start


allow cross site origin:
=======================
- npm install cors
-
var cors = require('cors');
app = express();
app.use(cors());


package and install locally:
===========================
- npm pack
- npm install /path_to_tar/filename.tgz
(npm install ..\..\n2\services\nress\users\nress-users-1.0.0.tgz)


MongoDB:
=======
1. install
2. mkdir c:\mongo\data
3. "C:\Program Files\MongoDB\Server\3.6\bin\mongod.exe" --dbpath c:\mongo\data
4. start: "C:\Program Files\MongoDB\Server\3.6\bin\mongod.exe"
5. Commands:
db - current db
show dbs
use nress_db - switch to db

show collections
db.getCollectionNames()
db.users.insertOne( { id: 1, name: "user-1", status: "pending", create_date: Date() } );

db.users.find().pretty()

show users
show databases

db.collection.remove()
db.collection.drop()

db.solicitations.insertOne( { id: 1, number: "NN01TSANPM2901", acronym: "acronym-1", title: "Solicitation Title 1", fiscal_year: 2011, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 2, number: "NN01TSANPM2902", acronym: "acronym-2", title: "Solicitation Title 2", fiscal_year: 2012, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 3, number: "NN01TSANPM2903", acronym: "acronym-3", title: "Solicitation Title 3", fiscal_year: 2013, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 4, number: "NN01TSANPM2904", acronym: "acronym-4", title: "Solicitation Title 4", fiscal_year: 2014, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 5, number: "NN01TSANPM2905", acronym: "acronym-5", title: "Solicitation Title 5", fiscal_year: 2015, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 6, number: "NN01TSANPM2906", acronym: "acronym-6", title: "Solicitation Title 6", fiscal_year: 2016, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 7, number: "NN01TSANPM2907", acronym: "acronym-7", title: "Solicitation Title 7", fiscal_year: 2017, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 8, number: "NN01TSANPM2908", acronym: "acronym-8", title: "Solicitation Title 8", fiscal_year: 2018, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 9, number: "NN01TSANPM2909", acronym: "acronym-9", title: "Solicitation Title 9", fiscal_year: 2019, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 10, number: "NN01TSANPM2910", acronym: "acronym-10", title: "Solicitation Title 10", fiscal_year: 2020, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );
db.solicitations.insertOne( { id: 11, number: "NN01TSANPM29011", acronym: "acronym-11", title: "Solicitation Title 11", fiscal_year: 2021, preview_date: Date(), selection_date: Date(), release_date: Date(), close_date: Date() } );

###########################################################################################################################################################
=============================
Run Mongo as service windows:
=============================

mongod.cfg:
~~~~~~~~~~

systemLog:
    destination: file
    path: c:\mongo\data\log\mongod.log
storage:
    dbPath: c:\mongo\data\db
# network interfaces
net:
  port: 27017
  bindIp: 0.0.0.0

# Listen to local and LAN interfaces.
# bind_ip = 127.0.0.1,192.168.161.100, 192.168.99.101

"C:\Program Files\MongoDB\Server\3.6\bin\mongod.exe" --config "C:\Program Files\MongoDB\Server\3.6\mongod.cfg" --install --serviceName "MongoDB"
to remove:
"C:\Program Files\MongoDB\Server\3.6\bin\mongod.exe" --remove


net start MongoDB
net stop MongoDB



Docker:
======
sudo docker build -t users-node:v1 .
sudo docker tag users-node:v1 ubt-master:443/users-node:v1
sudo docker push ubt-master:443/users-node:v1

K8s:
====
cd  ./config
//kubectl create -f users-node.yaml
export DNAME="ubt-master" && envsubst < users-node.yaml | kubectl create -f -
kubectl create -f user-node-service.yaml

kubectl get pods
kubectl get deployments
kubectl get service


Spinoff:
=======
kubectl delete service users-node-service
kubectl delete deployment users-node

sudo docker rmi pod-name-id
